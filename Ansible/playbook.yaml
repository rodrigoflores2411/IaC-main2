- name: Configurar Nginx proxy (API Gateway + Balanceador)
  hosts: localhost          
  gather_facts: false       

  vars:
    project_root: "{{ playbook_dir }}/.."               
    nginx_conf_host: "{{ project_root }}/host_volumes/nginx" 
    web_root_host: "{{ project_root }}/host_volumes/web"     
    nginx_container: "nginx-proxy"                   

  tasks:
    - name: Crear directorios para volúmenes (nginx + web/apps)
      file:
        path: "{{ item }}"
        state: directory
        mode: '0755'
      loop:
        - "{{ nginx_conf_host }}"
        - "{{ web_root_host }}/app1"
        - "{{ web_root_host }}/app2"
        - "{{ web_root_host }}/app3"

    # 2. Copiar index.html de cada app (web estática)
    - name: Copiar index.html para app1
      copy:
        src: "{{ project_root }}/web/app1/index.html"
        dest: "{{ web_root_host }}/app1/index.html"
        mode: '0644'

    - name: Copiar index.html para app2
      copy:
        src: "{{ project_root }}/web/app2/index.html"
        dest: "{{ web_root_host }}/app2/index.html"
        mode: '0644'

    - name: Copiar index.html para app3
      copy:
        src: "{{ project_root }}/web/app3/index.html"
        dest: "{{ web_root_host }}/app3/index.html"
        mode: '0644'

    # 3. Copiar configuraciones NGINX (una por app + proxy principal)
    - name: Copiar nginxapp1.config (conf del LB para app1)
      copy:
        src: "{{ project_root }}/files/nginx/nginxapp1.config"
        dest: "{{ nginx_conf_host }}/nginxapp1.config"
        mode: '0644'

    - name: Copiar nginxapp2.config (conf del LB para app2)
      copy:
        src: "{{ project_root }}/files/nginx/nginxapp2.config"
        dest: "{{ nginx_conf_host }}/nginxapp2.config"
        mode: '0644'

    - name: Copiar nginxapp3.config (conf del LB para app3)
      copy:
        src: "{{ project_root }}/files/nginx/nginxapp3.config"
        dest: "{{ nginx_conf_host }}/nginxapp3.config"
        mode: '0644'

    - name: Copiar nginx.config (API Gateway principal)
      copy:
        src: "{{ project_root }}/files/nginx/nginx.config"
        dest: "{{ nginx_conf_host }}/nginx.config"
        mode: '0644'

    # 4. Recargar NGINX sin reiniciar contenedor (hot-reload)
    - name: Intentar recargar NGINX (hot-reload)
      command: "docker exec {{ nginx_container }} nginx -s reload"
      register: reload_result
      ignore_errors: true   # Si falla, pasamos al reinicio

    # 5. Si el reload falló → reiniciar contenedor
    - name: Reiniciar contenedor NGINX (reload falló)
      command: "docker restart {{ nginx_container }}"
      when: reload_result.rc != 0
      
